"en-US": {
  click_to_copy: "Click to copy"
  show_hosts: "H @marked{_, number} / @possible{_, number} (@percent{_, number, percent}) | MSPT @mspt{_, number, :: .00} TPS @tps{_, number, :: .00}"
  inspect_info: "Inspecting @name[@_()]"

  error: {
    command: "@lines[@_()][\n]"
    creating_item: "Could not create item"
    caption.argument.parse.failure: {
      component: "Invalid component ID '{input}'"
      blueprint: "Invalid blueprint ID '{input}'"
      data_node: {
        malformed: "Malformed node syntax"
        registry: "Invalid component ID '{input}'"
      }
    }
  }

  command: {
    version: "@name{_} v@version{_} by @authors[@_{_}][, ]"
    reload: {
      pre: "Reloading..."
      post: [
        "Reloaded with @qt_entries{_, plural,"
        "zero {no messages.}"
        "one {# message:}"
        "other {# messages:}} @entries["
        "  @_[@_()][\n  ]]"
      ]
      entry: {
        verbose: "· @lines[@_{_}][\n  ]"
        info: "· @lines[@_{_}][\n  ]"
        warning: "! @lines[@_{_}][\n  ]"
        error: "! @lines[@_{_}][\n  ]"
      }
    }
    hosts: [
      "Hosts last tick (marked / possible):"
      "  @marked{_, number} / @possible{_, number} (@percent{_, number, percent}) @types["
      "  · @name{_}: @marked{_, number} / @possible{_, number} (@percent{_, number, percent})]"
    ]
    list: [
      "@entries[ · @name[@_()] @id{_}"
      "]@found{_, plural, one {# result} other {# results}} / @total{_, number} total"
    ]
    tree: {
      header: "Node @name[@_()] @id{_}"
      child: "@indent{_}  @slot[@_()]: @value[@_()]"
      empty_slot: "empty"
    }
    info: {
      component: {
        message: [
          "Component @name[@_()] @id{_}:"
          "  Tags: [ @tags[@_{_}][, ] ]"
          "  Slots: @slots_count{_, number} @slots["
          "   · @_[@_()]]"
          "  Features: @features_count{_, number} @features["
          "   · @_[@_()]]"
          "  Stats: @stats_count{_, number} @stats["
          "   · @_[@_()]]"
        ]
        slot: [
          "@name[@_()] @key{_} @required{_, select,"
          "  true {required}"
          "  other {-}"
          "} @modifiable{_, select,"
          "  true {modifiable}"
          "  other {-}"
          "} [ @tags[@_{_}] ]"
        ]
        feature: [
          "@name[@_()] @id{_}"
        ]
        stats: [
          "Priority @priority{_, number} @reversed{_, select,"
          "  true {reversed}"
          "  other {-}"
          "}: @qt_entries{_, plural, one {# entry} other {# entries}}"
        ]
      }
      blueprint: [
        "Blueprint @name[@_()] @id{_}: @tree["
        "  @_()]"
      ]
    }
    give: {
      one: "Gave @amount{_, number}x @item() to @target()"
      other: "Gave @amount{_, number}x @item() to @qt_targets{_, plural, one {# player} other {# players}}"
    }
  }
}
