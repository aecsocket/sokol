# Defines styles used by the system.
styles: {
  # Defines the "tone" of the plugin.
  accent: { color: "#329945" }
  # Generic information.
  info: { color: "gray" }
  # Variable information.
  var: { color: "white" }
  # Important information, like a key in a key/value pair.
  key: { color: "dark_green" }
  # A name of an element.
  name: { color: "green" }
  # Extra, optional information.
  extra: { color: "dark_gray" }
  # Description for an element.
  description: { color: "gray", italic: true }
  # Error messages.
  error: { color: "red" }
  # An operator.
  op: { color: "aqua" }
  # Stat styles.
  stat_constant: { color: "yellow" }
  stat_path: { color: "dark_green" }
}

# Defines formats for individual messages, using the styles.
formats: {
  chat_prefix: [ "accent" ]
  keyed.hover: [ "info", { id: "var", type: "extra", command: "var" } ]
  feature_description: [ "description" ]
  stat_priority: {
    forward: [ "extra", { value: "var" } ]
    reverse: [ "extra", { value: "var" } ]
  }
  stat_map: {
    header: [ "info", { amount: "var" } ]
    entry: {
      single: [ "info", { key: "key", name: "name", value: "var", length: "var" } ]
      multiple: [ "info", { key: "key", name: "name", value: "var", length: "var" } ]
    }
  }
  stat_node.separator: [ "extra" ]
  stat_type: {
    string: {
      set: [ "op", { value: "var" } ]
      add: [ "op", { value: "var" } ]
    }
    number: {
      set: [ "op", { value: "var" } ]
      add: [ "op", { value: "var" } ]
      subtract: [ "op", { value: "var" } ]
      multiply: [ "op", { value: "var" } ]
      divide: [ "op", { value: "var" } ]
    }
    item: [ "extra", { key: "var", model_data: "info", damage: "info", unbreakable: "info", flags: "info" } ]
  }
  rule: {
    constant: {
      true: [ "stat_constant" ],
      false: [ "stat_constant" ]
    }
    not: [ "op" ]
    with_terms: {
      result: [ "info" ]
      term: [ "extra" ]
    }
    and.separator: [ "info" ]
    or.separator: [ "info" ]
    has: [ "op", { path: "stat_path" } ]
    as: [ "op", { path: "stat_path" } ]
    as_root: [ "op", { path: "stat_path" } ]
    is_root: [ "op" ]
    as_parent: [ "op" ]
    has_tags: [ "op", { tags: "var" } ]
    has_features: [ "op", { features: "var" } ]
    is_complete: [ "op" ]
  }

  error: {
    command: [ "error" ]
    exception: {
      no_message: [ "error" ]
      message: [ "error" ]
    }
    caption: {
      argument.parse.failure: {
        duration: [ "error" ]
        key: [ "error" ]
      }
    }
    no_arg: [ "error" ]
    no_targets: [ "error" ]
    no_node_value: [ "error" ]
    item_creation: [ "error" ]
    item_not_tree: [ "error" ]
  }
  command: {
    version: [ "info", { name: "accent", version: "var", authors: "var" } ]
    reload: {
      start: [ "info" ]
      end: [ "info" ]
    }
    setting: [ "info" ]
    list: {
      entry: [ "info", { type: "extra", name: "name", id: "var" } ]
      total: [ "info", { results: "var" } ]
    }
    info: {
      header: [ "info", { type: "extra", name: "name", id: "var" } ]
      description: [ "description" ]
    }
    component: {
      tags: [ "info", { tags: "var" } ]
      slots: [ "info", { amount: "var" } ]
      slot: [ "info", { id: "key", name: "name", tags: "var", offset: "var" } ]
      features: [ "info", { amount: "var" } ]
      feature: [ "info", { id: "key", name: "name" } ]
      stats: [ "info", { amount: "var" } ]
      stat: [ "info", { amount: "var" } ]
    }
    tree: {
      root: [ "info", { name: "name", id: "var" } ]
      empty: [ "error", { slot: "key" } ]
      child: [ "info", { slot: "key", name: "name" } ]
      child_hover: [ "info", { key: "var", slot: "name" } ]
    }
    give: [ "info", { amount: "var", item: "var", targets: "var" } ]
  }
}
